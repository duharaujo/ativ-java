
public class Conta {
    private int numConta;
    private String titular;
    protected double saldo;

    public Conta(int numeroConta, String titular, double saldo) {
        this.numConta = numConta;
        this.titular = titular;
        this.saldo = saldo;
    }

    public int getNumConta() {
        return numeroConta;
    }

    public String getTitular() {
        return titular;
    }

    public double getSaldo() {
        return saldo;
    }

    public void depositar(double valor) {
        saldo += valor;
        System.out.println("Depósito de R$" + valor + " realizado com sucesso.");
    }

    //implementado nas subclasses
    public void sacar(double valor) {
        
    }

    
    public void transferir(double valor, Conta destino) {
        
    }
}

 conta corrente que herda de Conta
public class ContaCorrente extends Conta {
    private double limiteChequeEspecial;

    public ContaCorrente(int numConta, String titular, double saldo, double limiteChequeEspecial) {
        super(numConta, titular, saldo);
        this.limiteChequeEspecial = limiteChequeEspecial;
    }

    @Override
    public void sacar(double valor) {
        if (valor <= saldo + limiteChequeEspecial) {
            saldo -= valor;
            System.out.println("Saque de R$" + valor + " realizado com sucesso.");
        } else {
            System.out.println("Saldo insuficiente.");
        }
    }

    @Override
    public void transferir(double valor, Conta destino) {
        if (valor <= saldo + limiteChequeEspecial) {
            saldo -= valor;
            destino.depositar(valor);
            System.out.println("Transferência de R$" + valor + " realizada com sucesso.");
        } else {
            System.out.println("Saldo insuficiente para transferência.");
        }
    }
}

public class ContaPoupanca extends Conta {
    public ContaPoupanca(int numConta, String titular, double saldo) {
        super(numConta, titular, saldo);
    }

    @Override
    public void sacar(double valor) {
        System.out.println("Não é possível sacar diretamente da conta poupança.");
    }

    @Override
    public void transferir(double valor, Conta destino) {
        if (valor <= saldo) {
            saldo -= valor;
            destino.depositar(valor);
            System.out.println("Transferência de R$" + valor + " realizada com sucesso.");
        } else {
            System.out.println("Saldo insuficiente para transferência.");
        }
    }
}


public class Main {
    public static void main(String[] args) {
        ContaCorrente cc = new ContaCorrente(123, "João", 1000, 500);
        ContaPoupanca cp = new ContaPoupanca(456, "Maria", 2000);

        cc.depositar(500);
        cc.sacar(1500);
        cc.transferir(300, cp);

        cp.depositar(1000);
        cp.sacar(500);
        cp.transferir(700, cc);
    }
}
